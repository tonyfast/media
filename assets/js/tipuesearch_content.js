var tipuesearch = {
  "pages": [
    {
      "title": "mermaid diagrams are cool",
      "text": "i recently columbused mermaid while learning just how many great features hackmd provides. i've been having fun exploring all of [mermaid's modern features] in collaborative work with my friends on hackmd. we're all having fun with mermaid.\n\ngantt\n    mermaid :0d, 1d\n    is :1d, 2d\n    cool :1d\n\nits 2021, ten years since the 2020 blip, and 7 years since i first wrote about [mermaid diagrams] in 2014.[0] it feels like hearing an old song for the time; i keep playing it on repeat.\nyou can explore the [hackmd docs] for [all the cool features] they provide; seriously y'all gotta take the time to brush up. we're just going to focus on mermaid.\ndiagrams with mermaid\n[mermaid] is a diagramming and charting tool in javascript. it produces <svg> figures in javascript using a [d3]-based library for directed graphs called [dagre]. same as 7 years ago, except now everything is likely typescript and :face_with_monocle:\nbelow is a list of the different charts and syntaxes used with mermaid.\nFlowchart\nFlowcharts are good ways to represent workflows or processes.\nflowchart TB\n    c1-->a2\n    subgraph one\n    a1-->a2\n    end\n    subgraph two\n    b1-->b2\n    end\n    subgraph three\n    c1-->c2\n    end\n\nSequence diagram\nSequence diagrams are good for sharing interactions over time.\nsequenceDiagram\n    Alice->>John: Hello John, how are you?\n    John-->>Alice: Great!\n    Alice-)John: See you later!\n\nClass Diagram\nClass diagrams can be used to visual object oriented programming interfaces.\n classDiagram\n      Animal <|-- Duck\n      Animal <|-- Fish\n      Animal <|-- Zebra\n      Animal : +int age\n      Animal : +String gender\n      Animal: +isMammal()\n      Animal: +mate()\n      class Duck{\n          +String beakColor\n          +swim()\n          +quack()\n      }\n      class Fish{\n          -int sizeInFeet\n          -canEat()\n      }\n      class Zebra{\n          +bool is_wild\n          +run()\n      }\n\nState Diagram\nState diagrams can be defined to show how systems interact.\nhttps://twitter.com/happyautomata\nstateDiagram-v2\n    [*] --> Still\n    Still --> [*]\n\n    Still --> Moving\n    Moving --> Still\n    Moving --> Crash\n    Crash --> [*]\n\nEntity Relationship Diagram\nEntity relationship diagrams are composed to illustrate the connecivity of knowledge.\nerDiagram\n    CUSTOMER ||--o{ ORDER : places\n    ORDER ||--|{ LINE-ITEM : contains\n    CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n\nUser Journey\nUser journey's can describe a person's interaction with technology.\njourney\n    title My working day\n    section Go to work\n      Make tea: 5: Me\n      Go upstairs: 3: Me\n      Do work: 1: Me, Cat\n    section Go home\n      Go downstairs: 5: Me\n      Sit down: 5: Me\n\nGantt\nGantt charts, named for Henry Gantt, show the relationship between activities and schedule\ngantt\n    mermaid :0d, 1d\n    is :1d, 2d\n    cool :1d\n\nPie Chart\nLastly, pie charts are mermaid feature for making important business decision on big data and machine learning.\npie title mermaid\n         \"\ud83e\uddd1\u200d\ud83e\uddb0\": 90\n         \"\ud83d\udc1f\" : 10\n         \n\nRequirement Diagram\ncan mermaid jupyter?\nbefore our blip, the homie [@bollwyvl] had a %%mermaid magic that worked in the classic notebok. those were simpler times, and now we have [jupyterlab], mermaid magic has been archived.[1]\nthe new school does provide a cool [jupyter-markup] extension adds code fence directives like mermaid. some examples are shown in the screenshots below.\nTODO: screenshots\nwhy the lull?\ni was curious to think about why [mermaid] fell out of my toolbox, and i hadn't thought anything of it. :thinking_face: there are few things that attributed to this.\n\ni use a conda and scientific python toolchain meaning that [graphviz] is used more often. graphviz's dot syntax is tried and tested, its a timeless song.\ni hate node and i don't want a node runtime in my waking or sleeping life.\njupyter shifted focus to new technologies with bolder intent that created friction between old and new tools.\nthe saddest part is that javascript became more difficult to hack in a notebook in jupyter.\n\nthere is change in the wind and i'm fairly certain i'll be using mermaid more frequently now that it works in newest [jupyterlab] ecosystem with the [jupyter-markup] extension.\nconclusion\nmermaid is cool. markdown is cool. jupyter is cool. hackmd is cool. it is cool that they are all cool with each other. stay cool. :sunglasses:",
      "tags": "",
      "url": "https://github.com/tonyfast/media/posts/september/mermaid_is_cool/"
    }
  ]
};